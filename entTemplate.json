{
  "entTemplate": {
    "sendNoPara2Tem": "sendNoPara2Tem: function(str)",
    "sendtoTemplate": "发送命令数据到模板\nsendtoTemplate: function(cmd_string, jsonVal)\ncmd_string：命令\njsonVal：内容",
    "webInit": "初始化处理，页面打开成功时必须调用\n无参数",
    "onSendMsg2WebWindow": "onSendMsg2WebWindow: function(url, exdata)",
    "onWebData": "注册web通信消息\nonWebData: function(url, exdata)\n",
    "sendWebMessage": "给网页发送消息\nsendWebMessage: function(msgType, exdata)",
    "subscribeWebMessage": "subscribeWebMessage: function(url)",
    "entLogBase64": "通过模板输出log\nentLogBase64: function(filter, data)",
    "entLog": "entLog: function(filter, data)",
    "onSceneLaunched": "当前场景 加载完成\nonSceneLaunched: function()",
    "closeWindow": "关闭窗口\ncloseWindow: function()",
    "SetWindowMinimize": "最小化窗口,娱乐模板里的窗口不支持，目前是给enthall的entsdk用的\nSetWindowMinimize: function()",
    "subscribeServerMessage": "注册需要接收的后台协议\nsubscribeServerMessage: function(appId, moduleId, maxType, minType)",
    "unSubscribeServerMessage": "反注册需要接收的后台协议\nunSubscribeServerMessage: function(appId, moduleId, maxType, minType)",
    "subscribeChannelServerMessage": "注册需要接收的后台协议\nsubscribeChannelServerMessage: function(subCid)",
    "unSubscribeChannelServerMessage": "反注册需要接收的后台协议\nunSubscribeChannelServerMessage: function(subCid)",
    "subscribeModuleMessage": "注册需要接收的定制命令\nsubscribeModuleMessage: function(msgName)",
    "unSubscribeModuleMessage": "反注册需要接收的定制命令\nunSubscribeChannelServerMessage: function(subCid)",
    "sendServerData": "发送协议\nsendServerData: function(appId, moduleId, maxType, minType, binary_string)",
    "sendServerDataOld": "发送协议\nsendServerDataOld: function(appId, moduleId, maxType, minType, binary_string)",
    "getModuleData": "发送获取指令给模板 旧ID接口\ngetModuleData: function(msgName, binary_string)",
    "sendModuleData": "发送指令给模板 旧ID接口\nsendModuleData: function(msgName, binary_string)",
    "sendTaskCommand": "发送指定任务给模板\nsendTaskCommand: function(commandName, exdata)",
    "setWindowRect": "设置窗口尺寸位置\nsetWindowRect: function(x, y, w, h, url)",
    "setWindowPosition": "设置窗口位置\nsetWindowPosition: function(x, y)",
    "setWindowSize": "设置窗口尺寸\nsetWindowSize: function(w, h)",
    "setAnchorString": "设置窗口尺寸位置\nsetAnchorString: function(data)",
    "setVisible": "设置窗口显示隐藏\nsetVisible: function(bVisible)",
    "createWebWidget": "创建窗口\ncreateWebWidget: function(args)",
    "setWidth": "setWidth: function(width)",
    "setHeight": "setHeight: function(height)",
    "deleteWidget": "deleteWidget: function(url)",
    "setWindowDragRect": "设置可拖动区域\nsetWindowDragRect: function(x, y, w, h, isdrag)",
    "openNewWebWindow": "打开一个新的弹窗 islogin : 是否带登陆态\nopenNewWebWindow: function(url, \nislogin,\n x,\n y,\n w,\n h,\n exdata,\n useParentYY,\n isAddon,\n isAbs,\n isTransparent = true)",
    "openCenterWebWindow": "打开一个新的居中弹窗 islogin : 是否带登陆态\nopenCenterWebWindow: function(url,\nislogin\n,w,\nh,\nexdata,\nuseParentYY,\nisAddon,\nisTransparent = true)",
    "closeWebWindow": "根据url关闭一个弹窗\ncloseWebWindow: function(url)",
    "openRoom": "YY房间跳转\nopenRoom: function(topcid, subcid)",
    "openPage": "打开网页 islogin : 是否带登陆态\nopenPage: function(url, islogin)",
    "downloadImage": "下载图片\ndownloadImage: function(url, width, height)",
    "listenUserInfoChanged": "listenUserInfoChanged: function()",
    "reportClicked": "上报点击\nreportClicked: function(clickName, path)",
    "reportEvent": "上报事件\nreportEvent: function(eventId, info)",
    "openUserInfoFrame": "打开个人信息页\nopenUserInfoFrame: function(uid, type)",
    "OpenCenterOfMidWebWindow": "OpenCenterOfMidWebWindow: function(url,\nislogin,\n w,\n h,\n xoffset,\n yoffxet,\n exdata,\n useParentYY,\n isAddon\n)",
    "reportEvent_base64": "base64上报事件\nreportEvent_base64: function(eventId, info)",
    "listenModulesReady": "监听模块加载完毕信号\nlistenModulesReady: function()",
    "listenLayoutChanged": "listenLayoutChanged: function()",
    "openPluginWebWindow": "openPluginWebWindow: function(url, islogin, size, exdata = \"\", useParentYY = 0, isAddon = 0)",
    "listenChannelChange": "listenChannelChange: function()",
    "countPublicMsgNum": "countPublicMsgNum: function(key, freq)",
    "stopCountPublicMsgNum": "stopCountPublicMsgNum: function(key)",
    "rightPopMenu": "rightPopMenu: function(uid)",
    "openChongzhiWindow": "openChongzhiWindow: function(type)",
    "moneyNotEnough": "moneyNotEnough: function()",
    "DownloadResource": "DownloadResource: function(url, bUn7z)",
    "createChildPopWnd": "createChildPopWnd: function(url, isLogin, x, y, w, h, exdata)",
    "createCocosGame": "createCocosGame: function(rect, scriptpath, scriptmain, gameId)",
    "closeCocosGame": "closeCocosGame: function()",
    "keepWndPos": "keepWndPos: function( ctrl, offset, ctrlAlignType, winAlignType, processType)",
    "removeKeepWnd": "removeKeepWnd: function()",
    "enableAltF4Close": "enableAltF4Close: function(enable)",
    "hideWnd": "hideWnd: function(url)",
    "beginListenVoiceSpeakingChaned": "beginListenVoiceSpeakingChaned: function()",
    "stopListenVoiceSpeakingChaned": "stopListenVoiceSpeakingChaned: function()",
    "getSpeakingUsers": "getSpeakingUsers: function()",
    "createService": "createService: function(appid)",
    "destroyService": "destroyService: function(appid)",
    "getSelfInfo": "getSelfInfo: function()",
    "getChannelInfo": "getChannelInfo: function()",
    "onWebOpenAuchorTrueLovePage": "onWebOpenAuchorTrueLovePage: function(anchorid, fromPage, toPage, isAnchor)",
    "sendWordtoPublicBoard": "sendWordtoPublicBoard:function(password)",
    "getAllTrueLoveUid": "getAllTrueLoveUid:function()",
    "openEntertaimentHall": "打开娱乐大厅\nopenEntertaimentHall: function(url)"
  }
}